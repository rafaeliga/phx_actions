name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment

env:
  MIX_ENV: ${{ github.event.inputs.environment }}
  AWS_EB_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_EB_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ENDPOINT_HOST: ${{ secrets.ENDPOINT_HOST }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
  USE_SSL: true

jobs:
  phoenix-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Elixir
        uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
        with:
          elixir-version: "1.12.2"
          otp-version: "23.3"
      - name: build
        run: |
          mix deps.get --only prod
          mix compile
          npm install --prefix assets
        shell: bash
      - name: release
        run: |
          npm run deploy --prefix assets
          mix phx.digest
          mix release
        shell: bash
      - name: artifact
        uses: actions/upload-artifact@v2
        with:
          name: compiled
          path: _build/${{ env.MIX_ENV }}/rel/phx_actions
  docker:
    needs: phoenix-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download compiled
        uses: actions/download-artifact@v2
        with:
          name: compiled
          path: _build/${{ env.MIX_ENV }}/rel/phx_actions

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ github.sha }}-${{ env.MIX_ENV }}
            latest-${{ env.MIX_ENV }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: priv/setup/docker/Dockerfile
          context: .
          build-args: |
            ENVIRONMENT=${{ env.MIX_ENV }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  aws:
    needs: docker
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6 (needed for eb cli)
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"
      - name: Configure credentials
        run: |
          echo ${{ github.event.inputs.environment }}
          mkdir ~/.aws
          envsubst < priv/setup/aws/aws.env > ~/.aws/credentials
      - name: Install eb cli
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
      - name: Prepare deploy
        run: |
          envsubst < priv/setup/aws/Dockerrun.aws.json > ./Dockerrun.aws.json

          eb use phxactions-${{ github.event.inputs.environment }}

          envsubst < priv/setup/aws/eb.env > .ebextensions/options.config

          git add ./Dockerrun.aws.json .ebextensions/options.config
      - name: Check EB status
        run: eb status

      - name: Deploy
        run: |
          eb deploy --staged
          eb printenv
