name: Tests

on: [pull_request]

env:
  MIX_ENV: test
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

jobs:
  elixir:
    runs-on: ubuntu-latest

    services:
      db:
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Run Code Climate
        uses: erzz/codeclimate-standalone@v0.0.3
        with:
          html_report: true
      - name: Code Climate results
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: codeclimate-report.html
      # - name: Upload Reports
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: Code Climate Reports
      #     path: |
      #       codeclimate-report.json
      #       codeclimate-report.html
      # - name: Set up Elixir
      #   uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      #   with:
      #     elixir-version: "1.12.2"
      #     otp-version: "23.3"
      # - name: Restore dependencies cache
      #   uses: actions/cache@v2
      #   with:
      #     path: deps
      #     key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      #     restore-keys: ${{ runner.os }}-mix-
      # - name: Install dependencies
      #   run: mix deps.get
      # - name: Run tests
      #   run: |
      #     mix test --cover
      # - name: Coverage
      #   uses: romeovs/lcov-reporter-action@v0.2.16
      #   with:
      #     lcov-file: ./cover/lcov.info
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload deps result
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: elixir-deps
      #     path: deps
  # nodejs:
  #   needs: elixir
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "14.16.1"

  #     - name: Download deps result
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: elixir-deps
  #         path: deps

  #     - name: Build
  #       run: |
  #         npm install --prefix assets
  #         npm run build --prefix assets
  #     - name: Test
  #       run: npm test --prefix=assets
