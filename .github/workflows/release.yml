name: Release

on:
  push:
    branches: [master]

env:
  MIX_ENV: hom
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-phoenix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
        with:
          elixir-version: "1.12.2"
          otp-version: "23.3"
      - name: build
        run: |
          mix deps.get --only prod
          mix compile
          npm install --prefix assets
      - name: release
        run: |
          npm run deploy --prefix assets
          mix phx.digest
          mix release
      - name: artifact
        uses: actions/upload-artifact@v2
        with:
          name: compiled
          path: _build/hom/rel/phx_actions
  build-and-push-image:
    needs: build-phoenix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download compiled
        uses: actions/download-artifact@v2
        with:
          name: compiled
          path: _build/hom/rel/phx_actions

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          build-args: |
            ENVIRONMENT=hom
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
